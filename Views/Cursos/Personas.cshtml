@model ProyectoCanvas.ViewModels.CursoPersonasViewModel

@{
    Layout = "_CourseLayout";
    ViewData["Title"] = "Personas del Curso";
    var esProfesor = User.IsInRole("Profesor");
}

<div class="container">
    <h2>Personas del Curso</h2>

    <!-- Tabs para Personas y Grupos -->
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="personas-tab" data-bs-toggle="tab" data-bs-target="#personas-tab-pane" type="button" role="tab" aria-controls="personas-tab-pane" aria-selected="true">Personas</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="grupos-tab" data-bs-toggle="tab" data-bs-target="#grupos-tab-pane" type="button" role="tab" aria-controls="grupos-tab-pane" aria-selected="false">Grupos</button>
        </li>
    </ul>

    <!-- Contenido de las pestañas -->
    <div class="tab-content" id="myTabContent">
        <!-- Tab de Personas -->
        <div class="tab-pane fade show active" id="personas-tab-pane" role="tabpanel" aria-labelledby="personas-tab">
            <table class="table">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Rol</th>
                        @if (esProfesor)
                        {
                            <th>Acciones</th>
                        }
                    </tr>
                </thead>
                <tbody id="personasCursoTable">
                    @foreach (var persona in Model.Personas)
                    {
                        <tr>
                            <td>@persona.Nombre @persona.ApellidoPaterno @persona.ApellidoMaterno</td>
                            <td>@persona.Rol</td>
                            @if (esProfesor)
                            {
                                <td>
                                    <button class="btn btn-danger btn-eliminar-persona" data-persona-id="@persona.Id">Eliminar</button>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
            @if (esProfesor)
            {
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#agregarEstudianteModal">+</button>
            }
        </div>

        <!-- Tab de Grupos -->
        <div class="tab-pane fade" id="grupos-tab-pane" role="tabpanel" aria-labelledby="grupos-tab">
            <div class="d-flex justify-content-between mt-3">
                <h4>Grupos del Curso</h4>
                @if (esProfesor)
                {
                    <button id="crearGrupoBtn" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#grupoModal">Crear Grupo</button>
                }
            </div>

            <div class="accordion mt-3" id="gruposAccordion">
                @foreach (var grupo in Model.Grupos)
                {
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="heading-@grupo.Id">
                            <button class="accordion-button @Model.GrupoSeleccionado?.Id == grupo.Id ? " " : " collapsed"" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@grupo.Id" aria-expanded="@Model.GrupoSeleccionado?.Id == grupo.Id ? " true" : "false" " aria-controls="collapse-@grupo.Id">
                                @grupo.Nombre <span class="badge bg-secondary ms-2">@grupo.Personas.Count estudiantes</span>
                            </button>
                        </h2>
                        <div id="collapse-@grupo.Id" class="accordion-collapse collapse @Model.GrupoSeleccionado?.Id == grupo.Id ? " show" : "" "" aria-labelledby="heading-@grupo.Id" data-bs-parent="#gruposAccordion">
                            <div class="accordion-body">
                                <ul>
                                    @foreach (var persona in grupo.Personas)
                                    {
                                        <li>@persona.Nombre @persona.ApellidoPaterno @persona.ApellidoMaterno <span class="text-success">&#10003;</span></li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@if (esProfesor)
{
    <!-- Modal para agregar estudiantes -->
    <div class="modal fade" id="agregarEstudianteModal" tabindex="-1" role="dialog" aria-labelledby="agregarEstudianteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="agregarEstudianteModalLabel">Agregar Estudiante</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="estudiantesDisponibles">
                        <!-- Aquí se cargarán los estudiantes disponibles -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Volver</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para crear/editar grupos -->
    <div class="modal fade" id="grupoModal" tabindex="-1" role="dialog" aria-labelledby="grupoModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="grupoModalLabel">Crear Grupo</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="grupoForm" method="post" action="@Url.Action("CrearGrupo", "Cursos")">
                        <div class="form-group">
                            <label for="nombreGrupo">Nombre del Grupo</label>
                            <input type="text" class="form-control" id="nombreGrupo" name="nombreGrupo" required>
                        </div>
                        <div class="form-group">
                            <label for="listaEstudiantes">Lista de estudiantes</label>
                            <ul id="listaEstudiantes" class="list-group">
                                @foreach (var estudiante in Model.EstudiantesDisponibles)
                                {
                                    // Verifica si el estudiante está en otro grupo diferente al grupo actual
                                    var estaEnOtroGrupo = Model.EstudiantesEnGrupos.Any(eg => eg.Id == estudiante.Id && eg.GrupoId != Model.GrupoSeleccionado?.Id);
                                    var estaEnGrupoActual = Model.EstudiantesEnGrupos.Any(eg => eg.Id == estudiante.Id && eg.GrupoId == Model.GrupoSeleccionado?.Id);

                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        <span>@estudiante.Nombre</span>
                                        @if (estaEnOtroGrupo && !estaEnGrupoActual)
                                        {
                                            <span class="lock-icon text-secondary">&#128274;</span> <!-- Icono de candado -->
                                        }
                                        else
                                        {
                                            <input type="checkbox" class="form-check-input estudiante-checkbox" id="estudiante-@estudiante.Id" name="estudiantesSeleccionados" value="@estudiante.Id" @(estaEnGrupoActual ? "checked" : "")>
                                            <span class="checkmark text-success d-none">&#10003;</span>
                                        }
                                    </li>
                                }
                            </ul>
                        </div>

                        <input type="hidden" id="cursoId" name="cursoId" value="@ViewBag.CourseId" />
                        <input type="hidden" id="grupoId" name="grupoId" value="0">
                        <button type="submit" class="btn btn-primary">Guardar</button>
                        <button type="button" id="eliminarGrupoBtn" class="btn btn-danger d-none">
                            <i class="fa fa-trash"></i> Eliminar Grupo
                        </button>
                    </form>

                </div>
            </div>
        </div>
    </div>

}
@section Scripts {
    <script>
        $(document).ready(function () {
            // Inicialización de arrays para almacenar los estudiantes seleccionados
            var estudiantesSeleccionados = [];

            $('.lock-icon').closest('li').css('pointer-events', 'none');

            // Lógica para editar grupo al desplegar el acordeón
            $('#gruposAccordion').on('show.bs.collapse', function (e) {
                var grupoId = $(e.target).attr('id').split('-')[1];

                // Cambiar a "Editar Grupo" en lugar de "Crear Grupo"
                $('#crearGrupoBtn').text('Editar Grupo').attr('data-bs-target', '#grupoModal');
                $('#grupoModalLabel').text('Editar Grupo');
                $('#grupoId').val(grupoId);

                // Obtener solo el texto del nombre del grupo, sin el número de estudiantes
                var grupoNombre = $('#heading-' + grupoId + ' .accordion-button')
                    .contents()
                    .filter(function () {
                        return this.nodeType === 3; // Filtra solo el texto, ignora los elementos
                    })
                    .text()
                    .trim();

                // Cargar datos del grupo en el formulario
                $('#nombreGrupo').val(grupoNombre);

                // Mostrar botón de eliminar
                $('#eliminarGrupoBtn').removeClass('d-none');

                // Cargar los estudiantes seleccionados para el grupo
                cargarEstudiantesSeleccionados(grupoId);
            });

            // Manejar el cierre del acordeón para restablecer el botón y limpiar el formulario
            $('#gruposAccordion').on('hide.bs.collapse', function () {
                // Restablecer el botón a "Crear Grupo" al cerrar el acordeón
                $('#crearGrupoBtn').text('Crear Grupo').attr('data-bs-target', '#grupoModal');
                $('#grupoModalLabel').text('Crear Grupo');
                $('#nombreGrupo').val('');
                $('#grupoId').val('0');
                $('#eliminarGrupoBtn').addClass('d-none');

                // Restablecer la lista de estudiantes
                $('.estudiante-checkbox').prop('checked', false);
                $('.checkmark').addClass('d-none');
                $('li.list-group-item').show(); // Mostrar todos los estudiantes
            });

            // Restablecer modal al cerrarse
            $('#grupoModal').on('hidden.bs.modal', function () {
                // Resetear modal a estado de "Crear Grupo"
                $('#crearGrupoBtn').text('Crear Grupo');
                $('#grupoModalLabel').text('Crear Grupo');
                $('#nombreGrupo').val('');
                $('#grupoId').val('0');
                $('#eliminarGrupoBtn').addClass('d-none');

                // Restablecer la lista de estudiantes
                $('.estudiante-checkbox').prop('checked', false);
                $('.checkmark').addClass('d-none');
                $('li.list-group-item').show(); // Mostrar todos los estudiantes
            });

            // Eliminar grupo
            $(document).on('click', '#eliminarGrupoBtn', function () {
                var grupoId = $('#grupoId').val(); // Asegúrate de que esto obtenga el ID del grupo correcto
                Swal.fire({
                    title: '¿Estás seguro de eliminar este grupo?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Sí, eliminar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.post('@Url.Action("EliminarGrupo", "Cursos")', { grupoId: grupoId }, function (response) {
                            if (response.success) {
                                Swal.fire({
                                    title: 'Eliminado',
                                    text: 'El grupo ha sido eliminado con éxito.',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then(() => {
                                    location.reload(); // Refrescar la página después de la eliminación
                                });
                            } else {
                                Swal.fire('Error', response.message, 'error');
                            }
                        }).fail(function () {
                            Swal.fire('Error', 'No se pudo conectar con el servidor.', 'error');
                        });
                    }
                });
            });

            // Función para manejar la eliminación de personas
            $(document).on('click', '.btn-eliminar-persona', function () {
                var personaId = $(this).data('persona-id');
                var cursoId = '@ViewBag.CourseId';
                Swal.fire({
                    title: '¿Estás seguro de eliminar a esta persona del curso?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Sí, eliminar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.post('@Url.Action("EliminarPersona", "Cursos")', { cursoId: cursoId, personaId: personaId }, function (response) {
                            if (response.success) {
                                // Mostrar una alerta de éxito
                                Swal.fire({
                                    title: 'Eliminado',
                                    text: 'La persona ha sido eliminada del curso.',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then(() => {
                                    // Recargar la página después de mostrar la alerta
                                    location.reload();
                                });
                            } else {
                                Swal.fire('Error', 'Ocurrió un error al eliminar la persona.', 'error');
                            }
                        }).fail(function () {
                            Swal.fire('Error', 'No se pudo conectar con el servidor.', 'error');
                        });
                    }
                });
            });

            // Manejar la adición de estudiantes al curso
            $('#agregarEstudianteModal').on('show.bs.modal', function () {
                var cursoId = '@ViewBag.CourseId';
                $.get('@Url.Action("ObtenerEstudiantesDisponibles", "Cursos")', { cursoId: cursoId }, function (data) {
                    $('#estudiantesDisponibles').html(data);
                });
            });

            $(document).on('click', '.btn-add-student', function () {
                var personaId = $(this).data('persona-id');
                var cursoId = '@ViewBag.CourseId';
                $.post('@Url.Action("AgregarEstudiante", "Cursos")', { cursoId: cursoId, personaId: personaId }, function () {
                    location.reload();
                });
            });

            // Función para cargar estudiantes seleccionados en el modal
            function cargarEstudiantesSeleccionados(grupoId) {
                $.get('@Url.Action("ObtenerPersonasPorGrupo", "Cursos")', { grupoId: grupoId }, function (estudiantes) {
                    console.log(estudiantes); // Verifica los datos recibidos en la consola

                    // Limpiamos cualquier selección previa
                    $('.estudiante-checkbox').prop('checked', false);
                    $('.checkmark').addClass('d-none');

                    // Recorrer los estudiantes y marcar los checkboxes correspondientes
                    estudiantes.forEach(estudiante => {
                        var checkbox = $('#estudiante-' + estudiante.id);
                        if (checkbox.length) {
                            checkbox.prop('checked', true);
                            checkbox.siblings('.checkmark').removeClass('d-none');
                        }
                    });
                }).fail(function () {
                    console.log('Error al cargar los estudiantes del grupo');
                });
            }

            // Manejar la selección de estudiantes
            $(document).on('change', '.estudiante-checkbox', function () {
                if ($(this).is(':checked')) {
                    $(this).siblings('.checkmark').removeClass('d-none');
                    estudiantesSeleccionados.push(parseInt($(this).val()));
                    $(this).closest('li').hide(); // Ocultar de la lista tras selección
                } else {
                    $(this).siblings('.checkmark').addClass('d-none');
                    var estudianteId = parseInt($(this).val());
                    estudiantesSeleccionados = estudiantesSeleccionados.filter(function (id) {
                        return id !== estudianteId;
                    });
                    $(this).closest('li').show(); // Mostrar en la lista tras deselección
                }
            });

            $('#grupoForm').on('submit', function (event) {
                event.preventDefault(); // Evita el envío del formulario por defecto

                var grupoId = $('#grupoId').val();
                var formData = $(this).serialize(); // Serializa los datos del formulario

                $.post('@Url.Action("CrearGrupo", "Cursos")', formData, function (response) {
                    if (response.success) {
                        Swal.fire({
                            title: grupoId > 0 ? 'Grupo actualizado' : 'Grupo creado',
                            text: grupoId > 0 ? 'El grupo se ha actualizado con éxito.' : 'El grupo se ha creado con éxito.',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            location.reload(); // Recargar la página para mostrar los cambios
                        });
                    } else {
                        Swal.fire('Error', response.message, 'error');
                    }
                }).fail(function () {
                    Swal.fire('Error', 'Ocurrió un error al intentar guardar el grupo.', 'error');
                });
            });


        });
    </script>
}
